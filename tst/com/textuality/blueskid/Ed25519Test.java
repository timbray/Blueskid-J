package com.textuality.blueskid;

import org.junit.jupiter.api.Test;

import java.nio.charset.StandardCharsets;
import java.security.KeyPair;
import java.security.KeyPairGenerator;
import java.security.PublicKey;
import java.security.Signature;
import java.util.Base64;

import static org.junit.jupiter.api.Assertions.*;

class Ed25519Test {

    @Test
    public void InterchangeOneThousandKeys() throws Exception {
        KeyPairGenerator kpg = KeyPairGenerator.getInstance("Ed25519");

        for (int i = 0; i < 1000; i++) {
            KeyPair kp = kpg.generateKeyPair();
            PublicKey keyIn = kp.getPublic();
            String s = Ed25519.keyToString(keyIn);
            PublicKey keyOut = Ed25519.stringToKey(s);
            assertEquals(keyIn, keyOut);
        }
    }

    // above test shows that we can read our own generated texts.  This is a key generated by an
    // an external Go program; test that we can use it to verify a signature created by the Go program.
    @Test
    public void TestExternallyGeneratedKey() throws Exception {
        final String nonce = "f571bbdc-bfed-4edd-a9bc-e375783da846";
        final String armored = "-----BEGIN PUBLIC KEY-----\n" +
                "MCowBQYDK2VwAyEAc3JHiuRAFZBKVRzi/Y8rteMGUmz4gAcCHZnUUwMRSc8=\n" +
                "-----END PUBLIC KEY-----";
        final String sig = "yVZ0uj4irF9w4iYsaWfA+gVAx+nuqdSsBraNyMJDxfbjwLecY7DLHlK+KrhW5/mACTDidm42ZTIjyOXM73hTAQ==";
        final PublicKey key = Ed25519.stringToKey(armored);
        Signature vsig = Signature.getInstance("Ed25519");
        vsig.initVerify(key);
        vsig.update(nonce.getBytes(StandardCharsets.UTF_8));
        assertTrue(vsig.verify(Base64.getDecoder().decode(sig)));
    }
}